
# 配置根Logger [level],appenderName,appenderName2,...
# level分为：DEBUG,INFO,WARN,ERROR
# appenderName: 指定日志输出到的地方

log4j.rootLogger=debug,stdout,logfile

# Log4j提供的appender有以下几种
# org.apache.log4j.ConsoleAppender（控制台），
# org.apache.log4j.FileAppender（文件），
# org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件），
# org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件），
# org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
# 配置日志信息的格式（布局）
# org.apache.log4j.HTMLLayout（以HTML表格形式布局），
# org.apache.log4j.PatternLayout（可以灵活地指定布局模式），
# org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），
# org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
log4j.appender.stdout.layout=org.apache.log4j.SimpleLayout

log4j.appender.logfile=org.apache.log4j.FileAppender
# 指定日志文件输出目录
log4j.appender.logfile.File=log.log
# 指定日志输出最低级别
log4j.appender.logfile.Threshold = DEBUG
# 指定日志都会被立即刷新输出,默认值是true
log4j.appender.logFile.ImmediateFlush = TRUE
# 将消息追加到文件中,默认值是true
log4j.appender.logFile.Append = TRUE 
# 日志文件编码格式
log4j.appender.logFile.Encoding = UTF-8
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %F %p %m%n

log4j.logger.com.ibatis=DEBUG
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=DEBUG
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=DEBUG
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=DEBUG
log4j.logger.java.sql.Connection=DEBUG
log4j.logger.java.sql.Statement=DEBUG
log4j.logger.java.sql.PreparedStatement=DEBUG